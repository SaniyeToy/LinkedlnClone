//
//  PublishInteractor.swift
//  LinkedinClone
//
//  Created by MacOS on 17.02.2022.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol PublishBusinessLogic {
    func doSomething(request: Publish.Something.Request)
//    func doSomethingElse(request: Publish.SomethingElse.Request)
}

protocol PublishDataStore {
    //var name: String { get set }
}

class PublishInteractor: PublishBusinessLogic, PublishDataStore {
    var presenter: PublishPresentationLogic?
    var worker: PublishWorker?
    //var name: String = ""

    // MARK: Do something (and send response to PublishPresenter)

    func doSomething(request: Publish.Something.Request) {
        worker = PublishWorker()
        worker?.doSomeWork()

        let response = Publish.Something.Response()
        presenter?.presentSomething(response: response)
    }
//
//    func doSomethingElse(request: Publish.SomethingElse.Request) {
//        worker = PublishWorker()
//        worker?.doSomeOtherWork()
//
//        let response = Publish.SomethingElse.Response()
//        presenter?.presentSomethingElse(response: response)
//    }
}
