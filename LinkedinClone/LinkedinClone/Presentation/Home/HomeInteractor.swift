//
//  HomeInteractor.swift
//  LinkedinClone
//
//  Created by MacOS on 17.02.2022.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol HomeBusinessLogic: AnyObject {
    func alertAction(title: String, message: String, action: UIAlertAction)
    func alert(title: String, message: String)
    func fetchPost()
   
}

protocol HomeDataStore: AnyObject{
    
}

final class HomeInteractor: HomeBusinessLogic, HomeDataStore {
    var presenter: HomePresentationLogic?
    var worker: HomeWorkerProtocol
   
    init(worker: HomeWorkerProtocol) {
        self.worker = worker
    }
    
    func fetchPost() {
        worker.getData(){ [weak self] result in
            switch result {
            case .success(let response):
                if result != nil {
                    print("response: \(response)")
                } else {
                    print("Document does not exist")
                }
            case .failure(let error):
                print("Error decoding city: \(error)")
            }
        }
    }
    func alertAction(title: String, message: String, action: UIAlertAction) {
        presenter?.alertAction(title: title, message: message, action: action)
    }
    
    func alert(title: String, message: String) {
        presenter?.alert(title: title, message: message)
    }
}
