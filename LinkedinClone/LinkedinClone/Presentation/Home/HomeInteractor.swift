//
//  HomeInteractor.swift
//  LinkedinClone
//
//  Created by MacOS on 17.02.2022.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import Firebase

protocol HomeBusinessLogic: AnyObject {
    func alertAction(title: String, message: String, action: UIAlertAction)
    func alert(title: String, message: String)
    func fetchPost()
   
}

protocol HomeDataStore: AnyObject{
    var postList: [QueryDocumentSnapshot]? { get set }
}

final class HomeInteractor: HomeBusinessLogic, HomeDataStore {
    var postList: [QueryDocumentSnapshot]?
    var presenter: HomePresentationLogic?
    var worker: HomeWorkerProtocol
   
    init(worker: HomeWorkerProtocol) {
        self.worker = worker
    }
    
    func fetchPost() {
        let db = Firestore.firestore()
        db.collection("post").getDocuments() { (querySnapshot, err) in
            if let err = err {
                print("Error getting documents: \(err)")
            } else {
                for document in querySnapshot!.documents {
                    print("\(document.documentID) => \(document.data())")
                        }
                
                self.postList = querySnapshot?.documents
                guard let postList = self.postList else {return}
                self.presenter?.presentPostList(response:  Home.Fetch.Response( postList: postList))

            }
        }
    }
    func alertAction(title: String, message: String, action: UIAlertAction) {
        presenter?.alertAction(title: title, message: message, action: action)
    }
    
    func alert(title: String, message: String) {
        presenter?.alert(title: title, message: message)
    }
}
