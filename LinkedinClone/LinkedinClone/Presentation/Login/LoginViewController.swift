//
//  LoginViewController.swift
//  LinkedinClone
//
//  Created by MacOS on 17.02.2022.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol LoginDisplayLogic: AnyObject
{
    func displayLoginView(viewModel: Login.Something.ViewModel)
//    func displaySomethingElse(viewModel: Login.SomethingElse.ViewModel)
}

class LoginViewController: UIViewController {
    var interactor: LoginBusinessLogic?
    var router: (NSObjectProtocol & LoginRoutingLogic & LoginDataPassing)?

    
    @IBOutlet weak var emailTextField: UITextField!
    
    
    @IBOutlet weak var passwordTextField: UITextField!
    
    
    @IBOutlet weak var contiuneWithFaceBookButton: UIButton!
    
    @IBOutlet weak var loginButton: UIButton!
    
    
    
    
    // MARK: Object lifecycle

    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }

    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }

    // MARK: - Setup Clean Code Design Pattern 

    private func setup() {
        let viewController = self
        let interactor = LoginInteractor(worker: LoginWorker())
        let presenter = LoginPresenter()
        let router = LoginRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }


    // MARK: - View lifecycle

    override func viewDidLoad() {
        super.viewDidLoad()
    
    }
    
    @IBAction func contiuneFaceBookTapped(_ sender: Any) {
    }
    
    @IBAction func loginButtonTapped(_ sender: Any) {
        login()
    }
    
    @IBAction func signUpButtonTapped(_ sender: Any) {
    }
    
    func login(){
 
        
        guard let email = emailTextField.text,
              !email.isEmpty else {
                  interactor?.alert(title: "Please enter email", message: "Invalid email")
                  return
              }
        
        guard let password = passwordTextField.text,
              !password.isEmpty else {
                  interactor?.alert(title: "Please enter password", message: "Invalid password")
                  return
              }
        
        interactor?.login(email: email, password: password)
        router?.routeToHome()
    }

}
extension LoginViewController: LoginDisplayLogic {
    func displayLoginView(viewModel: Login.Something.ViewModel) {
       
    }
}
